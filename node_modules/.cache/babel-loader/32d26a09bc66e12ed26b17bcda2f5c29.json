{"ast":null,"code":"var _jsxFileName = \"/Users/sachin.nagaraja/Desktop/react/01-starting-setup/src/components/Expenses/ExpenseItem.js\";\nimport React from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card'; //.. to go up one level\n// import { useState } from 'react';\n//hooks can only be called within componenet functions  and \n//nowhere else not even inside a nested function inside component function\n//useState returns  an array with the value and the setter for that value which can be initialised with array destructuring\n\nfunction ExpenseItem(props) {\n  //props can be named anything ..  \n  //it is an object with properties as mentioned in app.js attributes\n  // const [title,setTitle]=useState(props.title)      //title becomes a state variable..be careful what u render in jsx..if u render props.title it will never change \n\n  // const clickHandler = () =>{                   //Handlers are eventlistener fucntions..just optional naming convention\n  //     setTitle('Updated!')\n  // }\n  return (\n    /*#__PURE__*/\n    //this return has to return jsx as a single element so enclosed in a div\n    React.createElement(Card, {\n      className: \"expense-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ExpenseDate, {\n      date: props.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }), \"                                     \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"expense-item__description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"expense-item__price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"$\", props.amount))) /*here the custom Card component encloses other elements this is done by {props.children} in Card.js file  */\n  );\n}\n\nexport default ExpenseItem;","map":{"version":3,"names":["React","ExpenseDate","Card","ExpenseItem","props","date","title","amount"],"sources":["/Users/sachin.nagaraja/Desktop/react/01-starting-setup/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React from 'react';\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';  //.. to go up one level\n// import { useState } from 'react';\n//hooks can only be called within componenet functions  and \n//nowhere else not even inside a nested function inside component function\n//useState returns  an array with the value and the setter for that value which can be initialised with array destructuring\n\nfunction ExpenseItem(props) {                     //props can be named anything ..  \n                                                  //it is an object with properties as mentioned in app.js attributes\n// const [title,setTitle]=useState(props.title)      //title becomes a state variable..be careful what u render in jsx..if u render props.title it will never change \n\n    // const clickHandler = () =>{                   //Handlers are eventlistener fucntions..just optional naming convention\n    //     setTitle('Updated!')\n    // }\n    return (                                      //this return has to return jsx as a single element so enclosed in a div\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date}/>                                     {/*can have single tag if theres nothing between the tags */}\n            <div className=\"expense-item__description\">\n                <h2>{props.title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n            {/* <button onClick={clickHandler}>Change Title</button>                 no parenthesis for clickhandler or the function will be executed when it is parsed for the first time */}\n        </Card>                                                                  /*here the custom Card component encloses other elements this is done by {props.children} in Card.js file  */\n    );\n}\nexport default ExpenseItem"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY,CAAC,CAAE;AAChC;AACA;AACA;AACA;;AAEA,SAASC,WAAW,CAACC,KAAK,EAAE;EAAsB;EACA;EAClD;;EAEI;EACA;EACA;EACA;IAAA;IAA8C;IAC1C,oBAAC,IAAI;MAAC,SAAS,EAAC,cAAc;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC1B,oBAAC,WAAW;MAAC,IAAI,EAAEA,KAAK,CAACC,IAAK;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAE,yCAAqC,eACrE;MAAK,SAAS,EAAC,2BAA2B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACtC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKD,KAAK,CAACE,KAAK,CAAM,eACtB;MAAK,SAAS,EAAC,qBAAqB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAC,GAAC,EAACF,KAAK,CAACG,MAAM,CAAO,CACxD,CAEH,CAAkE;EAAA;AAEjF;;AACA,eAAeJ,WAAW"},"metadata":{},"sourceType":"module"}